---
- debug: msg="Starting network compliance management test"
- debug: msg="Role Path {{ role_path }}"

- block:
  - name: Load vars and declare dnac vars
    include_vars:
      file: "{{ role_path }}/vars/vars_network_compliance_management.yml"
      name: vars_map
    vars:
      dnac_login: &dnac_login
        dnac_host: "{{ dnac_host }}"
        dnac_username: "{{ dnac_username }}"
        dnac_password: "{{ dnac_password }}"
        dnac_verify: "{{ dnac_verify }}"
        dnac_port: "{{ dnac_port }}"
        dnac_version: "{{ dnac_version }}"
        dnac_debug: "{{ dnac_debug }}"
        dnac_log: True
        dnac_log_level: DEBUG
        config_verify: True

  # - debug:
  #     msg: "{{ vars_map. }}"

#############################################
#                Clean Up                   #
#############################################

  # - name: Delete device
  #   cisco.dnac.inventory_workflow_manager:
  #     <<: *dnac_login
  #     state: deleted
  #     config:
  #       - "{{ item }}"
  #   loop: "{{ vars_map.delete_devices }}"

#############################################
#                Add Devices                #
#############################################

  - name: Add new device
    cisco.dnac.inventory_workflow_manager:
      <<: *dnac_login
      state: merged
      config:
        - "{{ item }}"
    loop: "{{ vars_map.device_details }}"
    register: result_add_device

  # # - name: Debug item
  # #   debug:
  # #     var: item
  # #   loop: "{{ result_add_device.results }}"

  # - name: Assert device addition success
  #   assert:
  #     that:
  #       - item.changed == true
  #       - "'added to Cisco Catalyst Center' in item.msg"
  #   loop: "{{ result_add_device.results }}"
  #   when: result_add_device is defined

#############################################
#                   Pause                   #
#############################################

  # - name: Pause for 5 seconds before updating interfaces
  #   pause:
  #     seconds: 5

#############################################
#           Run Full Compliance             #
#############################################
  
  - name: Run full complaince check using IP address list
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.run_complaince_iplist }}"
    register: result_run_complaince
 
  - name: Debug item
    debug:
      var: item
    loop: "{{ result_run_complaince.results }}"

  - name: Assert Run full complaince check using IP address list
    assert:
      that:
        - item.changed == true
        - "'Run Compliance Check has completed successfully' in item.msg"
    loop: "{{ result_run_complaince.results }}"
    when: result_run_complaince is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#           Run Full Compliance             #
#############################################
  
  - name: Run full Compliance check on device(s) using Site
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.run_complaince_site }}"
    register: result_run_complaince
 
  - name: Debug item
    debug:
      var: item
    loop: "{{ result_run_complaince.results }}"

  - name: Assert Run Compliance check on device(s) using Site
    assert:
      that:
        - item.changed == true
        - "'Run Compliance Check has completed successfully' in item.msg"
    loop: "{{ result_run_complaince.results }}"
    when: result_run_complaince is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#           Run Full Compliance             #
#############################################

  - name: Run Compliance check on device(s) using both IP address list and Site
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.run_compliance_iplist_site }}"
    register: result_run_complaince
 
  - name: Debug item
    debug:
      var: item
    loop: "{{ result_run_complaince.results }}"

  - name: Assert Run Compliance check on device(s) using both IP address list and Site
    assert:
      that:
        - item.changed == true
        - "'Run Compliance Check has completed successfully' in item.msg"
    loop: "{{ result_run_complaince.results }}"
    when: result_run_complaince is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#       Run Compliance with categories      #
#############################################

  - name: Run Compliance check with specific categories on device(s) using IP address list
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.run_compliance_category_iplist }}"
    register: result_run_complaince
 
  - name: Debug item
    debug:
      var: item
    loop: "{{ result_run_complaince.results }}"

  - name: Assert Run Compliance check with specific categories on device(s) using IP address list
    assert:
      that:
        - item.changed == true
        - "'Run Compliance Check has completed successfully' in item.msg"
    loop: "{{ result_run_complaince.results }}"
    when: result_run_complaince is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#       Run Compliance with categories      #
#############################################

  - name: Run Compliance check with specific categories on device(s) using Site
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.run_compliance_category_site }}"
    register: result_run_complaince
 
  - name: Debug item
    debug:
      var: item
    loop: "{{ result_run_complaince.results }}"

  - name: Assert Run Compliance check with specific categories on device(s) using Site
    assert:
      that:
        - item.changed == true
        - "'Run Compliance Check has completed successfully' in item.msg"
    loop: "{{ result_run_complaince.results }}"
    when: result_run_complaince is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#             Sync Device Config            #
#############################################

  - name: Sync Device Configuration on device(s) using IP address list
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.sync_config_iplist }}"
    register: result_sync_config

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_sync_config.results }}"

  # - name: Assert Sync Device Configuration on device(s) using IP address list
  #   assert:
  #     that:
  #       - item.changed == false
  #       - "'' in item.msg"
  #   loop: "{{ result_sync_config.results }}"
  #   when: result_sync_config is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#             Sync Device Config            #
#############################################

  - name: Sync Device Configuration on device(s) using Site
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.sync_config_site }}"
    register: result_sync_config

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_sync_config.results }}"

  # - name: Assert Sync Device Configuration on device(s) using IP address list
  #   assert:
  #     that:
  #       - item.changed == false
  #       - "'' in item.msg"
  #   loop: "{{ result_sync_config.results }}"
  #   when: result_sync_config is defined

#############################################
#                   Pause                   #
#############################################

  - name: Pause for 5 seconds before updating interfaces
    pause:
      seconds: 5

#############################################
#             Sync Device Config            #
#############################################

  - name: Sync Device Configuration on device(s) using IP address list and Site
    cisco.dnac.network_compliance_workflow_manager:
      <<: *dnac_login
      dnac_log_append: False
      config:  
        - "{{ item }}"
    loop: "{{ vars_map.sync_config_iplist_site }}"
    register: result_sync_config

  # - name: Debug item
  #   debug:
  #     var: item
  #   loop: "{{ result_sync_config.results }}"

  # - name: Assert Sync Device Configuration on device(s) using IP address list
  #   assert:
  #     that:
  #       - item.changed == false
  #       - "'' in item.msg"
  #   loop: "{{ result_sync_config.results }}"
  #   when: result_sync_config is defined